# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  linting:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        pip install ruff
        if (Test-Path requirements.txt) {pip install -r requirements.txt}
    - name: Lint with Ruff
      run: |
        ruff check .

  windows-test:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        pip install pytest pytest-cov PyInstaller wheel
        if (Test-Path requirements.txt) {pip install -r requirements.txt}
    - name: Install simonsays
      run: |
        pip install ./pynput_local
        pip install .
    - name: Test with pytest
      run: |
        python run_tests.py
    - name: Test build executable with pyinstaller
      run: |
        python tools/create_exe.py

  linux-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        python -m pip install --upgrade pip
        pip install pytest pytest-cov PyInstaller wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest-xvfb
    - name: Install simonsays
      run: |
        pip install ./pynput_local
        pip install .
    - name: Test with pytest
      run: |
        python run_tests.py
    - name: Test build executable with pyinstaller
      run: |
        python tools/create_exe.py
